<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
	
	
	
	<!-- This is where we configure Spring-Security  -->
 <http auto-config="true" use-expressions="true" access-denied-page="/denied" >
  
  <intercept-url pattern="/denied" access="permitAll"/>  
  <intercept-url pattern="/login" access="permitAll"/>
  <intercept-url pattern="/users/photo/**" access="permitAll"/>
  <intercept-url pattern="/users/subscribe**" access="permitAll"/>
  <intercept-url pattern="/users/activate**" access="permitAll"/>
  <intercept-url pattern="/users/**" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')"/>
  <intercept-url pattern="/groups/**" access="hasAnyRole('ROLE_ADMIN','ROLE_MANAGER')"/>
  <intercept-url pattern="/parameters/**" access="hasRole('ROLE_ADMIN')"/>
  <intercept-url pattern="/biens/photo/**" access="permitAll"/>
  <intercept-url pattern="/users/photo/**" access="permitAll"/>
  <intercept-url pattern="/biens/find-biens/**" access="permitAll"/>
  <intercept-url pattern="/biens/studios/**" access="permitAll"/>
  <intercept-url pattern="/biens/appartements/**" access="permitAll"/>
  <intercept-url pattern="/biens/studio/new**" access="isAuthenticated()"/>
  <intercept-url pattern="/biens/appartement/new**" access="isAuthenticated()"/>
  <intercept-url pattern="/biens/maison/new**" access="isAuthenticated()"/>
 
  
  <form-login
    login-page="/"
    authentication-failure-url="/"
    default-target-url="/"/>
    
  <logout
    invalidate-session="true"
    logout-success-url="/"
    logout-url="/logout"/>
  
 </http>
  
 <!-- Declare an authentication-manager to use a custom userDetailsService -->
 <authentication-manager>
         <authentication-provider user-service-ref="customUserDetailsService">
           <!-- <password-encoder ref="passwordEncoder"/> -->
         </authentication-provider>
 </authentication-manager>
  
 <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
 <!-- <beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/> -->
 
 <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
 <beans:bean id="customUserDetailsService" class="net.bbenarbia.web.services.CustomUserDetailsService"/>
  
  
	
	
</beans:beans>